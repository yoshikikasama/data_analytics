service: kasama-spectrum-add-partition-tmp
frameworkVersion: ‘3’
provider:
  name: aws
  runtime: python3.9
  lambdaHashingVersion: 20201221
  stage: ${env:STAGE, "dev"}
  region: ap-northeast-1
  apiGateway:
plugins:
  - serverless-python-requirements
package:
  patterns:
    - “!.vscode/**”
    - “!.git/**”
    - “!.gitignore”
    - “!.serverless”
    - “!.serverless/**”
    - “!README.md”
    - “!deploy-shell/**”
    - “!package*.json”
    - “!requirements.txt”
    - “!node_modules/**”
    - “!__pycache__”
    - “!exclude-me.py”
    - “!exclude-me-dir/**”
    - “!*.ps1"
    - “!yarn.lock”
custom:
  accountid: ${AWS::AccountId}068788852374
  pythonRequirements:
    dockerizePip: false
    usePipenv: false
    layer: true
    useDownloadCache: true
    useStaticCache: true
  region:
    prod: ap-northeast-1
    dev: ap-northeast-1
functions:
  spectrum_add_partition:
    name: ${self:service}-${self:provider.stage}-handler
    handler: handler/handler.lambda_handler
    role: LambdaRole
    memorySize: 128
    timeout: 29
    environment:
      ENV: ${self:provider.stage}
    layers:
      - Ref: PythonRequirementsLambdaLayer
    events:
      - http:
          path: /add_partition
          method: post
          private: true
          integration: lambda
          request:
            schemas:
              application/json:
                schema: ${file(models/partition_update_input.json)}
                name: SpectrumAddPartitionInput
                description: ‘Spectrum add partitionInput’
          response:
            headers:
              Content-Type: “‘application/json’”
            statusCodes:
              200: 
                parttern: ‘.*“statusCode”:200,.*’
                template: $input.path(“$.errorMessage”)
                headers:
                  Content-Type: “‘application/json’”
              400:
                pattern: ‘.*“statusCode”:400,.*’ # JSON response
                template: $input.path(“$.errorMessage”) # JSON return object
                headers:
                  Content-Type: “‘application/json’”
              500:
                pattern: ‘.*“statusCode”:500,.*’ # JSON response
                template: $input.path(“$.errorMessage”) # JSON return object
                headers:
                  Content-Type: “‘application/json’”
resources:
  Description: kasama Internal API
  Resources:
    LambdaRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Action: "sts:AssumeRole"
              Principal:
                Service: lambda.amazonaws.com
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/AmazonSSMReadOnlyAccess
          - arn:aws:iam::aws:policy/service-role/AWSLambdaRole
          - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole